"use strict";(()=>{var d=class{constructor(){this.boardWidth=7;this.boardLength=6}},r=new d,p=[];for(let e=0;e<r.boardWidth;e++){let l=null;for(let n=0;n<r.boardLength;n++){let o=null}}function h(){return console.log("getBoard was called"),p}function u(e){p=e,console.log("setBoard was called")}function w(){let e=document.getElementById("grid");for(let l=0;l<r.boardWidth;l++){let n=document.createElement("div");n.id=`row-${l}`,n.className="row";for(let o=0;o<r.boardLength;o++){let a=document.createElement("div");a.id=`row-${l}-column-${o}`,a.className="column",n.appendChild(a)}e==null||e.appendChild(n)}}var c="nought",f="cross",b="nobody";var m;function x(e,l,n,o,a){return o[e][l]!=null||(n==!1&&(o[e][l]=a),console.log(`takeTurn was called with row: ${e}, column: ${l}`)),o}function C(e){return e=="nought"||e==null?e="cross":e="nought",console.log("Switch player called. Current player is",e),e}function v(e){let l=e.length;for(let t=0;t<l;t++){if(e[t].every(i=>i===e[t][0]&&i!==null))return e[t][0];let s=!0;for(let i=0;i<l;i++)if(e[i][t]!==e[0][t]||e[i][t]===null){s=!1;break}if(s)return e[0][t]}let n=!0;for(let t=0;t<l;t++)if(e[t][t]!==e[0][0]||e[t][t]===null){n=!1;break}if(n)return e[0][0];let o=!0;for(let t=0;t<l;t++)if(e[t][l-1-t]!==e[0][l-1]||e[t][l-1-t]===null){o=!1;break}if(o)return e[0][l-1];if((t=>t.some(s=>s.some(i=>i===null)))(e)==!1)return"nobody";console.log("checkWinner was called")}function g(){u([[null,null,null],[null,null,null],[null,null,null]]),m="cross",console.log("resetGame was called")}function y(){return m}function P(e){m=e}function $(){return!1}var W=document.getElementById("winner-name"),E=document.getElementById("winner-display"),T=[c,f,null],k=[c,f,b];w();function G(){for(let e=0;e<r.boardWidth;e++)for(let l=0;l<r.boardLength;l++)document.getElementById(`row-${e}-column-${l}`).innerHTML=""}function L(e){console.log("populateHtmlGridWithBoardState was called with",e),G();for(let l=0;l<r.boardWidth;l++)for(let n=0;n<r.boardLength;n++){if(!e[l][n])continue;let o=e[l][n]===c?"\u2B55":"\u274C";document.getElementById(`row-${l}-column-${n}`).innerText=o}}function I(e){return Array.isArray(e)&&e.length===6}function N(e){return I(e)&&e.every(function(l){return T.includes(l)})}function O(e,l){console.log(`positionClick was called with rowIndex=${e}, columnIndex=${l},`);let n=x(e,l,$(),h(),y());if(u(n),P(C(y())),!I(n[0])||!n.every(N))throw`Expecting "getBoard" to return a 2d array where all values are one of the strings ${T}. Actually received: ${JSON.stringify(n)}`;L(n);let o=v(n);if(o){if(typeof o!="string"||!k.includes(o))throw`Expecting "checkWinner" to return null or one of the strings ${k}. Actually received: ${o}`;W.innerText=o,E.style.display="block"}}function V(e){g(),W.innerText="",E.style.display="None",G()}for(let e=0;e<r.boardWidth;e++)for(let l=0;l<r.boardLength;l++)document.getElementById(`row-${e}-column-${l}`).addEventListener("click",O.bind(null,e,l));var H=document.getElementById("reset-button");H.addEventListener("click",V);g();})();
//# sourceMappingURL=data:application/json;base64,
