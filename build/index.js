"use strict";(()=>{var f=class{constructor(){this.boardRows=6;this.boardCols=7}},r=new f,a=[];for(let e=0;e<r.boardRows;e++){let t=[];for(let n=0;n<r.boardCols;n++)t[n]=null;a.push(t)}console.log(a);function c(){let e=[];for(let t=0;t<r.boardRows;t++){let n=[];for(let l=0;l<r.boardCols;l++)n[l]=null;e.push(n)}return e}function m(){return console.log("getBoard was called"),a}function d(e){a=e,console.log("setBoard was called")}function b(){let e=document.getElementById("grid");for(let t=0;t<r.boardRows;t++){let n=document.createElement("div");n.id=`row-${t}`,n.className="row";for(let l=0;l<r.boardCols;l++){let o=document.createElement("div");o.id=`row-${t}-column-${l}`,o.className="column",n.appendChild(o)}e==null||e.appendChild(n)}}var u="nought",w="cross",C="nobody",g;function x(e,t,n,l,o){return l[e][t]!=null||(n==!1&&(l[e][t]=o),console.log(`takeTurn was called with row: ${e}, column: ${t}`)),l}function h(e){return e=="nought"||e==null?e="cross":e="nought",console.log("Switch player called. Current player is",e),e}function P(e){let t=r.boardRows,n=r.boardCols;for(let l=0;l<t;l++)for(let o=0;o<n;o++)if(e[l][o]==e[l][o+1]&&e[l][o+1]==e[l][o+2]&&e[l][o+2]==e[l][o+3]&&e[l][o]!=null)return e[l][o];for(let l=0;l<n;l++)for(let o=0;o<t-3;o++)if(e[o][l]==e[o+1][l]&&e[o+1][l]==e[o+2][l]&&e[o+2][l]==e[o+3][l]&&e[o][l]!=null)return e[o][l];for(let l=3;l<t;l++)for(let o=0;o<n-3;o++)if(e[l][o]==e[l-1][o+1]&&e[l-1][o+1]==e[l-2][o+2]&&e[l-2][o+2]==e[l-3][o+3]&&e[l][o]!=null)return e[l][o];console.log("checkWinner was called")}function p(){d(c()),g="cross",console.log("resetGame was called")}function y(){return g}function $(e){g=e}function v(){return!1}var T=document.getElementById("winner-name"),k=document.getElementById("winner-display"),I=[u,w,null],E=[u,w,C];b();function G(){for(let e=0;e<r.boardRows;e++)for(let t=0;t<r.boardCols;t++)document.getElementById(`row-${e}-column-${t}`).innerHTML=""}function W(e){console.log("populateHtmlGridWithBoardState was called with",e),G();for(let t=0;t<r.boardCols;t++)for(let n=0;n<r.boardRows;n++){if(!e[n][t])continue;let l=e[n][t]===u?"\u2B55":"\u274C";document.getElementById(`row-${n}-column-${t}`).innerText=l}}function A(e){return Array.isArray(e)&&e.length===r.boardCols}var N=c();console.log(R(N[0]));function R(e){function t(l){let o=[];for(let s=0;s<l[0].length;s++){o[s]=[];for(let i=0;i<l.length;i++)o[s][i]=l[i][s]}return o}let n=t(m());return Array.isArray(e)&&n[0].length===r.boardRows&&e.every(function(l){return I.includes(l)})}function H(e,t){console.log(`positionClick was called with rowIndex=${e}, columnIndex=${t},`);let n=x(e,t,v(),m(),y());if(d(n),$(h(y())),!A(n[0])||!n.every(R))throw`Expecting "getBoard" to return a 2d array where all values are one of the strings ${I}. Actually received: ${JSON.stringify(n)}`;W(n);let l=P(n);if(l){if(typeof l!="string"||!E.includes(l))throw`Expecting "checkWinner" to return null or one of the strings ${E}. Actually received: ${l}`;console.log("there is a winner"),T.innerText=l,k.style.display="block"}}function O(e){p(),T.innerText="",k.style.display="None",G()}for(let e=0;e<r.boardRows;e++)for(let t=0;t<r.boardCols;t++)document.getElementById(`row-${e}-column-${t}`).addEventListener("click",H.bind(null,e,t));var S=document.getElementById("reset-button");S.addEventListener("click",O);p();})();
//# sourceMappingURL=data:application/json;base64,
