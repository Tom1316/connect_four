"use strict";(()=>{var u=class{constructor(){this.boardRows=6;this.boardCols=7}},s=new u,a=[];for(let e=0;e<s.boardRows;e++){let t=[];for(let n=0;n<s.boardCols;n++)t[n]=null;a.push(t)}console.log(a);function y(){let e=[];for(let t=0;t<s.boardRows;t++){let n=[];for(let l=0;l<s.boardCols;l++)n[l]=null;e.push(n)}return e}function f(){return console.log("getBoard was called"),a}function c(e){a=e,console.log("setBoard was called")}function b(){let e=document.getElementById("grid");for(let t=0;t<s.boardRows;t++){let n=document.createElement("div");n.id=`row-${t}`,n.className="row";for(let l=0;l<s.boardCols;l++){let o=document.createElement("div");o.id=`row-${t}-column-${l}`,o.className="column",n.appendChild(o)}e==null||e.appendChild(n)}}var d="nought",m="cross",C="nobody",w;function x(e,t,n,l,o){return l[e][t]!=null||(n==!1&&(l[e][t]=o),console.log(`takeTurn was called with row: ${e}, column: ${t}`)),l}function h(e){return e=="nought"||e==null?e="cross":e="nought",console.log("Switch player called. Current player is",e),e}function P(e){let t=s.boardRows,n=s.boardCols;for(let l=0;l<t;l++)for(let o=0;o<n;o++)if(e[l][o]==e[l][o+1]&&e[l][o+1]==e[l][o+2]&&e[l][o+2]==e[l][o+3]&&e[l][o]!=null)return e[l][o];for(let l=0;l<n;l++)for(let o=0;o<t-3;o++)if(e[o][l]==e[o+1][l]&&e[o+1][l]==e[o+2][l]&&e[o+2][l]==e[o+3][l]&&e[o][l]!=null)return e[o][l];for(let l=3;l<t;l++)for(let o=0;o<n-3;o++)if(e[l][o]==e[l-1][o+1]&&e[l-1][o+1]==e[l-2][o+2]&&e[l-2][o+2]==e[l-3][o+3]&&e[l][o]!=null)return e[l][o];console.log("checkWinner was called");for(let l=0;l<t-3;l++)for(let o=0;o<n;o++)if(e[l][o]==e[l+1][o+1]&&e[l+1][o+1]==e[l+2][o+2]&&e[l+2][o+2]==e[l+3][o+3]&&e[l][o]!=null)return e[l][o];console.log("checkWinner was called")}function g(){c(y()),w="cross",console.log("resetGame was called")}function p(){return w}function $(e){w=e}function v(){return!1}var k=document.getElementById("winner-name"),T=document.getElementById("winner-display"),I=[d,m,null],E=[d,m,C];b();function G(){for(let e=0;e<s.boardRows;e++)for(let t=0;t<s.boardCols;t++)document.getElementById(`row-${e}-column-${t}`).innerHTML=""}function R(e){console.log("populateHtmlGridWithBoardState was called with",e),G();for(let t=0;t<s.boardCols;t++)for(let n=0;n<s.boardRows;n++){if(!e[n][t])continue;let l=e[n][t]===d?"\u2B55":"\u274C";document.getElementById(`row-${n}-column-${t}`).innerText=l}}function W(e){return Array.isArray(e)&&e.length===s.boardCols}function A(e){function t(l){let o=[];for(let r=0;r<l[0].length;r++){o[r]=[];for(let i=0;i<l.length;i++)o[r][i]=l[i][r]}return o}let n=t(f());return Array.isArray(e)&&n[0].length===s.boardRows&&e.every(function(l){return I.includes(l)})}function N(e,t){console.log(`positionClick was called with rowIndex=${e}, columnIndex=${t},`);let n=x(e,t,v(),f(),p());if(c(n),$(h(p())),!W(n[0])||!n.every(A))throw`Expecting "getBoard" to return a 2d array where all values are one of the strings ${I}. Actually received: ${JSON.stringify(n)}`;R(n);let l=P(n);if(l){if(typeof l!="string"||!E.includes(l))throw`Expecting "checkWinner" to return null or one of the strings ${E}. Actually received: ${l}`;console.log("there is a winner"),k.innerText=l,T.style.display="block"}}function H(e){g(),k.innerText="",T.style.display="None",G()}for(let e=0;e<s.boardRows;e++)for(let t=0;t<s.boardCols;t++)document.getElementById(`row-${e}-column-${t}`).addEventListener("click",N.bind(null,e,t));var O=document.getElementById("reset-button");O.addEventListener("click",H);g();})();
//# sourceMappingURL=data:application/json;base64,
